import socket
import threading

def in_mess(local_port): #incoming messages
    listener = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    listener.bind(('localhost', local_port))
    listener.listen()
    print(f"Listening for incoming connections on port {local_port}")
    while True:
        client_sock, addr = listener.accept()
        threading.Thread(target=in_conn, args=(client_sock,)).start()

def in_conn(sock): #incoming connections
    while True:
        message = sock.recv(1024)
        if not message:
            break
        print(f"Received message: {message.decode('ascii')}")
    sock.close()

def send(ip, port, message): #send messages
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
        sock.connect((ip, port))
        sock.sendall(message.encode('ascii'))
        print(f"Sent message to {ip}:{port}")

def main():
    local_port = int(input("Enter local port for incoming messages: "))
    threading.Thread(target=in_mess, args=(local_port,)).start()

    while True:
        ip = input("Enter peer IP: ")
        port = int(input("Enter peer port: "))
        message = input("Enter message to send: ")
        send(ip, port, message)

if __name__ == '__main__':
    main()
